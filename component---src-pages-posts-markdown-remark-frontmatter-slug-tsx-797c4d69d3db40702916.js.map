{"version":3,"file":"component---src-pages-posts-markdown-remark-frontmatter-slug-tsx-797c4d69d3db40702916.js","mappings":"8QASA,MAAMA,EACJC,EAAAA,cAACC,EAAAA,EAAW,CACVC,UAAU,SACVC,IAAI,iCACJC,IAAI,eAAcC,YAAAC,EAAA,OAITC,EAETC,IAEE,IAFD,KACHC,GACDD,EACC,MAAM,eAAEE,GAAmBD,EAE3B,GACoB,MAAlBC,GAC8B,MAA9BA,EAAeC,aACQ,MAAvBD,EAAeE,KAGf,OADAC,QAAQC,MAAM,qCAAsCJ,GAC7CV,EAAAA,cAACe,EAAAA,EAAI,KAAC,qBAGf,MAAM,YAAEJ,EAAW,KAAEC,GAASF,EAGxBM,GAAcC,EAAAA,EAAAA,GAASN,EAAYK,aAEzC,OACEhB,EAAAA,cAACe,EAAAA,EAAI,KACFC,EACChB,EAAAA,cAACkB,EAAAA,EAAW,CACVhB,UAAU,SACViB,MAAOH,EACPZ,IAAI,iBAGNL,EAGFC,EAAAA,cAAA,WAASE,UAAU,6BACjBF,EAAAA,cAACoB,EAAAA,EAAc,MAGfpB,EAAAA,cAAA,WAASE,UAAU,kDACjBF,EAAAA,cAAA,MAAIE,UAAU,YAAYS,EAAYU,OACtCrB,EAAAA,cAAA,KAAGE,UAAU,QAAQS,EAAYW,MACjCtB,EAAAA,cAAA,OACEE,UAAU,WACVqB,wBAAyB,CAAEC,OAAQZ,OAKzCZ,EAAAA,cAACyB,EAAAA,KAAI,CAACC,GAAG,KACP1B,EAAAA,cAAA,KAAGE,UAAU,gFAA+E,SAIzF,EAsBX,W","sources":["webpack://ians-projects-blog/./src/pages/posts/{markdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, PageProps, graphql } from \"gatsby\";\nimport Page from \"../../components/Page\";\nimport { GatsbyImage, StaticImage, getImage } from \"gatsby-plugin-image\";\nimport ProfileSidebar from \"../../components/ProfileSidebar\";\n\nexport { Head } from \"../../components/Head\";\n\n// TODO alternative splash banner for posts vs home page.\nconst DEFAULT_SPLASH_IMAGE = (\n  <StaticImage\n    className=\"w-full\"\n    src=\"../../images/splash-banner.jpg\"\n    alt=\"splash image\"\n  />\n);\n\nexport const BlogPostTemplate: React.FC<\n  PageProps<Queries.SingleBlogPostQuery>\n> = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  // TODO: how to make graphqlTypegen correctly infer non-null fields?\n  if (\n    markdownRemark == null ||\n    markdownRemark.frontmatter == null ||\n    markdownRemark.html == null\n  ) {\n    console.error(\"missing data for AllBlogPostsQuery\", markdownRemark);\n    return <Page>Post not found...</Page>;\n  }\n\n  const { frontmatter, html } = markdownRemark;\n\n  // TODO no 'any' here\n  const splashImage = getImage(frontmatter.splashImage as any);\n\n  return (\n    <Page>\n      {splashImage ? (\n        <GatsbyImage\n          className=\"w-full\"\n          image={splashImage}\n          alt=\"splash image\"\n        />\n      ) : (\n        DEFAULT_SPLASH_IMAGE\n      )}\n\n      <section className=\"flex flex-col lg:flex-row\">\n        <ProfileSidebar />\n\n        {/* <article className=\"p-3 max-w-4xl m-auto\"> */}\n        <article className=\"w-full p-3 lg:basis-3/4 lg:m-auto lg:max-w-4xl\">\n          <h1 className=\"text-3xl\">{frontmatter.title}</h1>\n          <p className=\"mb-4\">{frontmatter.date}</p>\n          <div\n            className=\"markdown\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </article>\n      </section>\n\n      <Link to=\"/\">\n        <p className=\"text-center w-full my-4 py-2 bg-amber-950 hover:bg-amber-900 hover:font-bold\">\n          Back\n        </p>\n      </Link>\n    </Page>\n  );\n};\n\nexport const pageQuery = graphql`\n  query SingleBlogPost($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        splashImage {\n          childImageSharp {\n            gatsbyImageData(width: 1200, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPostTemplate;\n"],"names":["DEFAULT_SPLASH_IMAGE","React","StaticImage","className","src","alt","__imageData","require","BlogPostTemplate","_ref","data","markdownRemark","frontmatter","html","console","error","Page","splashImage","getImage","GatsbyImage","image","ProfileSidebar","title","date","dangerouslySetInnerHTML","__html","Link","to"],"sourceRoot":""}